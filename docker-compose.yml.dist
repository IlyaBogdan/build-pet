version: '3'

services:

  nginx:
    container_name: nginx
    env_file: ./.env
    build:
      context: ./docker/nginx
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
    volumes:
      - './docker/nginx:/var/www:rw'
    depends_on:
      - backend
      - frontend
    networks:
      - messanger

  backend:
    container_name: backend
    env_file: ./.env
    build: 
      context: ./backend
      args:
        - PUID=${PUID}
        - PGID=${PGID}
    volumes:
      - './backend:/var/www/html'
    networks:
      - messanger

  frontend:
    container_name: frontend
    command: npm run serve
    env_file: ./.env
    build: ./front
    volumes:
      - './front:/var/www/html'
    networks:
      - messanger

  websocket:
    container_name: websocket
    command: npm run start:dev
    env_file: ./.env
    build: ./broker
    volumes:
      - './broker:/var/www/html'
    networks:
      - messanger
    depends_on:
      - backend
      - frontend

  mysql:
    image: mysql
    restart: always
    env_file: ./.env
    ports:
      - "33060:3306"      
    volumes:
      - './docker/mysql/mysql-data:/var/lib/mysql/'
    depends_on:
      - backend
    networks:
      - messanger

networks:
  messanger:
    driver: bridge